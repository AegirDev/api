{"version":3,"sources":["twitterLogo.png","telegramLogo.png","black.png","abi.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","buccm2ABI","ethereum_address","require","App","props","componentDidMount","a","initateEthereum","bind","setupLoader","that","setTimeout","setState","percentageLoader","loaderCSS","document","body","style","overflowY","loader","window","web3","getEthereumAccount","currentProvider","enable","finally","console","log","metaMask","selectedAddress","Web3","ethereum","eth","getAccounts","accounts","Contract","buccm2API","sendTx","returnUserNumber","displayErrorMessage","findAddress","String","state","userAddress","isAddress","methods","displayUserCount","call","from","target","buccv2Amount","amountToSend","specialTransfer","send","location","reload","contractAddress","userNumber","visibility","address","this","value","amount","Fragment","className","Container","Row","Col","class","Navbar","Brand","href","theme","preset","variant","mr","Toggle","Collapse","Text","src","telegram","twitter","fluid","bodyLoaderCSS","md","Bucc","fontSize","fontWeight","color","onChange","onClick","Card","bg","Body","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5ac2f2e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitterLogo.b730ba9f.png\";","module.exports = __webpack_public_path__ + \"static/media/telegramLogo.6606b619.png\";","module.exports = __webpack_public_path__ + \"static/media/black.2e16e85a.png\";","export const buccm2ABI = [\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"userDisplay\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"displayUserCount\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"toIdentity\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"specialTransfer\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];","import React, { Component, Suspense } from \"react\";\n\n/* BOOTSTRAP IMPORTS */\n//Elements\nimport Navbar from 'react-bootstrap/Navbar';\n//Layouts\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\n//CSS edits\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './loader.css';\nimport './design.css';\n\n\n//General Style Imports\nimport twitter from './twitterLogo.png';\nimport telegram from './telegramLogo.png';\n\nimport {\n  Button,\n  Text\n} from 'rebass';\n\nimport { Input } from '@rebass/forms';\nimport Bucc from \"./black.png\";\nimport preset from '@rebass/preset';\nimport Web3 from 'web3';\nimport { buccm2ABI } from './abi.js';\n\nvar ethereum_address = require('ethereum-address');\n\n\n\nconst contractAddress = \"0xd5a7d515fb8b3337acb9b053743e0bc18f50c855\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.web3 = \"\";\n    this.contractAddress = \"\";\n    this.accounts = \"\";\n    //Bindings\n    this.userAddress = this.userAddress.bind(this);\n    this.amountToSend = this.amountToSend.bind(this);\n    this.sendTx = this.sendTx.bind(this);\n    this.setupLoader = this.setupLoader.bind(this);\n    //Set State\n    this.state = {\n      returnUserNumber: \"\",\n      displayErrorMessage: false,\n      userNumber: 0,\n      amountToSend: 0,\n      target: 0,\n      loader: true,\n      percentageLoader: \"0%\",\n      visibility: \"visible\",\n      loaderCSS: \"loaderCoverSheet\"\n    }\n    document.body.style.overflowY = \"hidden\";\n  }\n\n  componentDidMount = async () => {\n    //this.setupLoader();\n    this.initateEthereum = this.initateEthereum.bind(this);\n    this.initateEthereum();\n  }\n\n  setupLoader = async () => {\n    var that = this;\n    setTimeout(function(){that.setState({percentageLoader: \"95%\", loaderCSS: \"loaderCoverSheet2\"});\n    document.body.style.overflowY = \"scroll\";}, 280);\n    setTimeout(function(){that.setState({loader: false, loaderCSS: \"loaderCoverSheet2\"});}, 300);\n \n    }\n\ninitateEthereum = async () => {\n  if (typeof window.web3 !== 'undefined') {\n  const that = this;\n  this.setState({percentageLoader: \"Awaiting\"});\n  this.getEthereumAccount = this.getEthereumAccount.bind(this);\n    try {            \n      await window.web3.currentProvider.enable().finally(\n        async () => {\n        that.setState({percentageLoader: \"25%\"});\n        that.getEthereumAccount();\n        that.setState({percentageLoader: \"50%\"});\n        }\n      );\n    } catch (e) {\n        console.log(e);\n        this.setState({metaMask: \"User likely rejected connection to the site.\"});\n    }\n  } else {\n    console.log(\"Metamask not detected or installed.\")\n  }\n  }\n\n  getEthereumAccount = async () => {\n    if (window.web3.currentProvider.selectedAddress !== null) {\n      this.setState({percentageLoader: \"60%\"});\n        const web3 = new Web3(window.ethereum);\n        const accounts = await web3.eth.getAccounts();\n        this.setState({percentageLoader: \"80%\"});\n        const buccm2API = await new web3.eth.Contract(buccm2ABI, contractAddress);\n        //set the state variables for implementation\n        this.setState({web3, accounts, buccm2API});\n        this.setState({percentageLoader: \"90%\"});\n        this.setupLoader();\n    }\n  }\n\nuserAddress(address) {\n  this.setState({userAddress: address.target.value});\n}\n\namountToSend(amount) {\n  this.setState({amountToSend: amount.target.value});\n  console.log(this.state.amountToSend);\n}\n\n\nsendTx = async () => {\n  var that = this;\n  this.setState({returnUserNumber: \"Attempting...\", displayErrorMessage: true});\n  var findAddress = String(this.state.userAddress);\n  if (findAddress == contractAddress) {\n    this.setState({displayErrorMessage: true, returnUserNumber: \"You cannot send tokens to the contract address, through the API.\"});\n    setTimeout(function(){that.setState({displayErrorMessage: false, returnUserNumber: \"\"});}, 5000);\n    return;\n  }\n  this.setState({returnUserNumber: \"Attempting... 10%\"});\n  if (ethereum_address.isAddress(findAddress)) {\n    var target = String(await this.state.buccm2API.methods.displayUserCount(findAddress).call({from: this.state.accounts[0]}));\n    this.setState({returnUserNumber: \"Recipient info found... 25%\"});\n    if (target == 0) {\n        this.setState({target, displayErrorMessage: true, returnUserNumber: \"This address has not been set up to receive transactions yet. To set it up, send a transaction of 0 BUCC to it from a different address than the one you are using now.\"});\n        setTimeout(function(){that.setState({displayErrorMessage: false, returnUserNumber: \"\"});}, 5000);\n        return;\n      }\n      try {\n        console.log(target);\n        var buccv2Amount = String(this.state.amountToSend * 10000000000);\n        console.log(buccv2Amount);\n        this.setState({returnUserNumber: \"Converting... 40%\"});\n            try {\n            this.setState({returnUserNumber: \"Sending... 70%\"});\n            await this.state.buccm2API.methods.specialTransfer(target, buccv2Amount).send({from: this.state.accounts[0]});\n            } catch (e) {\n              this.setState({\n                displayErrorMessage: true, returnUserNumber: \"Failed contract interaction. User likely rejected transaction or information was not put in correctly.\"});\n                setTimeout(function(){that.setState({displayErrorMessage: false, returnUserNumber: \"\"});}, 5000);\n                return;\n            }\n          this.setState({userAddress: \"0x0000000000000000000000000000000000000000\", buccv2Amount: 0, returnUserNumber: \"Transaction successfully sent. The page is refreshing in 10 seconds.\"});\n          setTimeout(function(){that.setState({displayErrorMessage: false, returnUserNumber: \"\"});}, 5000);\n          setTimeout(() => {\n            window.location.reload();\n          }, 10000);\n      } catch (e) {\n        this.setState({\n        displayErrorMessage: true, returnUserNumber: \"Due to how Metamask works, you may need to refresh the page. If this issue persists then the Ethereum address entered is invalid.\"});\n        console.log(e);\n      }\n  } else {\n    this.setState({displayErrorMessage: true, returnUserNumber: \"Not a valid ethereum address\"});\n  }\n  setTimeout(function(){that.setState({displayErrorMessage: false, returnUserNumber: \"\"});}, 5000);\n}\n\n  render () {\n  return (\n    <>\n\n        <Suspense>\n        { this.state.loader && (\n            <React.Fragment>\n            <div className={this.state.loaderCSS}>\n            <Container>\n            <Row>\n            <Col>\n            <div class=\"loader\">\n            <div class=\"inner one\"></div>\n            <div class=\"inner two\"></div>\n            <div class=\"inner three\"></div>\n            </div>\n            </Col>\n            </Row>\n            <Row>\n            <Col>\n            <span className=\"loaderText loaderLight\">Loading... {this.state.percentageLoader}</span>\n            </Col>\n            </Row>\n            </Container>\n            </div>\n            </React.Fragment>\n          )}\n        </Suspense>\n    \n        <Navbar>\n        <Navbar.Brand href=\"#home\">\n        <Container>\n          <Row>\n            <Col>\n        <a href=\"https://buccaneer.eth\" target=\"_blank\"><Button className=\"wp buttonFormat\" theme={preset} variant='outline' mr={2}>Homepage</Button></a>\n        </Col> \n        <Col>\n        <a href=\"https://ipfs.io/ipfs/QmQfDJCw6X2cvgaA3sB3YnyJrjLSgJb1N5xzzC8iszr7Tw\" target=\"_blank\"><Button className=\"wp buttonFormat\" theme={preset} variant='outline' mr={2}>Manual</Button></a>\n            </Col>\n          </Row>\n        </Container> \n        </Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text>\n          <a href=\"https://t.me/BuccaneerV2\"><img src={telegram} className=\"shareButtonSpacing\" /></a>\n            <a href=\"https://twitter.com/BuccaneerV2\"><img src={twitter} className=\"shareButtonSpacing\" /></a>\n          </Navbar.Text>\n        </Navbar.Collapse>\n        </Navbar>\n\n        \n     <Container fluid className={this.state.bodyLoaderCSS}>\n      <Row>\n      <Col md={2}>\n      </Col>\n      <Col md={8}>\n            <Container className=\"text-center bottomofPage\">\n                <Row>\n                  <Col md={2}>\n                  </Col>\n                  <Col md={8} className=\"text-center\">\n                  <img src={Bucc} className=\"logo\" />\n                  <Text className=\"headerText\"\n                    fontSize={[ 3, 4, 5 ]}\n                    fontWeight='bold'>\n                    Bermuda\n                  </Text>\n                  </Col>\n                  <Col md={2}>\n                  </Col>\n                  </Row>\n\n                  <Suspense>\n                  { this.state.displayErrorMessage && (\n                  <Row>\n                    <Col md={2}>\n                    </Col>\n\n                        <Col>\n                        <br />\n                        <Text\n                            fontSize={[ 3 ]}\n                            color='primary'\n                            className=\"text specialErrorHighlight\">\n                          {this.state.returnUserNumber}\n                        <br />\n                        <br />                           \n                        </Text>\n                        </Col>\n\n                    <Col md={2}>\n                    </Col>\n                  </Row>\n                  )}\n                  </Suspense>\n                    \n                    <Row>\n                      <Col md={4}>\n                      </Col>\n                      <Col md={4}>\n                          <Text\n                            fontSize={[ 3 ]}\n                            color='primary'\n                            className=\"text\">\n                            Recipient Address\n                          </Text>\n                          <Input className=\"input\" onChange={this.userAddress} />\n                      </Col>\n                      <Col md={4}>\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col md={4}>\n                      </Col>\n                      <Col md={4}>\n                          <Text\n                            fontSize={[ 3 ]}\n                            color='primary'\n                            className=\"text\">\n                            Amount to Send\n                          </Text>  \n                          <Input className=\"input\" onChange={this.amountToSend} value={this.state.amountToSend} />\n                      </Col>\n                      <Col md={4}>\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col md={4}>\n                      </Col>\n                      <Col md={4}>  \n                      <Button className=\"bottomButton buttonFormat\" theme={preset} variant='outline' onClick={this.sendTx}>Send</Button>\n                      </Col>\n                      <Col md={4}>\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col md={1}>\n                      </Col>\n                      <Col md={10}>  \n                      <Card variant=\"dark\" bg=\"blackbg\" className=\"text-center\">\n                      <Card.Body className=\"adjustCardBody\">\n                                <Card.Text className=\"cardBody\">\n                                <hr className=\"whiteHRLINE\" />\n                                <p className=\"cardFontMain\">\n                                The API is what allows you to use BUCC's full privacy features. Baked-in the BUCC contract \n                                is the ability to privately send BUCC tokens and destroy any traces. All that is required, \n                                is for an address to be whitelisted before being sent BUCC. Once an address is whitelisted into \n                                BUCC, it will forever be able to use any and all BUCC products and be able to discretely receive \n                                BUCC. Further if that address has never interacted with another address, that address will not be \n                                shown across any of Ethereum's standard tools. To whitelist an address, simply send 0 BUCC (or any \n                                amount) from any address to it. You should use a third address, preferably one not connected to the \n                                original address. \n                                <br /><br />\n                                You can use the BUCC tumbler to move ETH around if need be. You can also find more \n                                information on the API and BUCC itself in the <a href=\"https://ipfs.io/ipfs/QmQfDJCw6X2cvgaA3sB3YnyJrjLSgJb1N5xzzC8iszr7Tw\">\n                                manual</a>, click the button in the navbar to find it. You \n                                can further scramble your balance by using a trigger number (TN). By sending a fraction of the following; \n                                .0003334, .0003335, .0003336 you can send your full balance, half your balance or a quarter of your balance \n                                with the corresponding numbers. You can further scramble your BUCC by sending any amount of tokens to the \n                                contract address (0xd5a7d515fb8b3337acb9b053743e0bc18f50c855) and then sending 0 as the amount, then those \n                                tokens will go to the receiver. As said before, you can read the manual for more information. Feel free to \n                                try out Bermuda, the API and experience the privacy of BUCC. \n                                </p>\n                                </Card.Text>\n                                <hr className=\"whiteHRLINE\" />\n                              </Card.Body>\n                      </Card>\n                      </Col>\n                      <Col md={1}>\n                      </Col>\n                    </Row>\n            </Container>\n      </Col>\n      <Col md={2}>\n      </Col>\n      </Row>\n      </Container>\n\n  </>\n  );\n}\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}